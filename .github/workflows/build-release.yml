name: Build and Release

on:
  push:
    tags:
      - 'v*' # Triggers on tags like v1.3.0

env:
  PROJECT_NAME: ExplorerTabUtility  # project name

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        framework: [ 'net9.0-windows', 'net481' ]
        arch: [ 'x64', 'x86' ]
      fail-fast: false
      max-parallel: 4

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSBuild Environments
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '17.0'  # Visual Studio 2022
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Build Project
        run: |
          $outputDir = "../publish/${{ matrix.framework }}/${{ matrix.arch }}"
          if ("${{ matrix.framework }}" -eq "net9.0-windows") {
            # .NET 9.0 build
            msbuild "${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj" /restore /t:Publish /p:Configuration=Release /p:TargetFramework=${{ matrix.framework }} /p:RuntimeIdentifier=win-${{ matrix.arch }} /p:PublishDir=$outputDir /p:DebugType=none /p:PublishSingleFile=true
          } else {
            # .NET Framework 4.8.1 build
            msbuild "${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj" /restore /t:Publish /p:Configuration=Release /p:TargetFramework=${{ matrix.framework }} /p:RuntimeIdentifier=win-${{ matrix.arch }} /p:PublishDir=$outputDir /p:DebugType=none
          }
        shell: pwsh
      
      - name: Zip Artifacts
        id: zip_artifacts
        run: |
          $frameworkName = if ("${{ matrix.framework }}" -eq "net9.0-windows") { "Net9.0_FrameworkDependent" } else { "NetFW4.8.1" }
          $zipName = "${{ env.PROJECT_NAME }}_${{ github.ref_name }}_${{ matrix.arch }}_${frameworkName}.zip"
          
          # Create a temporary directory with PROJECT_NAME as the root
          $tempDir = "temp-$(New-Guid)"
          New-Item -Path "$tempDir/${{ env.PROJECT_NAME }}" -ItemType Directory -Force | Out-Null
          
          # Copy published files into PROJECT_NAME subdirectory
          Copy-Item -Path "publish/${{ matrix.framework }}/${{ matrix.arch }}/*" -Destination "$tempDir/${{ env.PROJECT_NAME }}" -Recurse
          
          # Compress the entire temp directory (includes PROJECT_NAME folder)
          Compress-Archive -Path "$tempDir/*" -DestinationPath $zipName
          
          # Clean up temporary directory
          Remove-Item -Path $tempDir -Recurse -Force
          
          echo "zipName=$zipName" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.zip_artifacts.outputs.zipName }}
          path: ${{ steps.zip_artifacts.outputs.zipName }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write       # Required to create releases
      pull-requests: read   # Required to read PRs for changelog generation
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
        
      - name: Generate Changelog
        id: generate_changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          mode: "COMMIT"
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}",
              "categories": [
                {
                    "title": "## üöÄ Feature",
                    "labels": ["feat", "feature"]
                },
                {
                    "title": "## üêõ Fix",
                    "labels": ["fix", "bug"]
                },
                {
                    "title": "## üìú Other",
                    "labels": []
                }
              ],
              "label_extractor": [
                {
                  "pattern": "^(build|chore|ci|docs|feat|fix|bug|perf|refactor|revert|style|test){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
                  "target": "$1"
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ env.PROJECT_NAME }} ${{ github.ref_name }}
          draft: true
          body: |
            ${{ steps.generate_changelog.outputs.changelog }}
            
            **Note:** If you are not sure, then you probably want [${{ env.PROJECT_NAME }}_${{ github.ref_name }}_x64_NetFW4.8.1.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/${{ env.PROJECT_NAME }}_${{ github.ref_name }}_x64_NetFW4.8.1.zip).
          files: artifacts/**/*.zip